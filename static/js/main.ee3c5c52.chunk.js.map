{"version":3,"sources":["weathercard.js","App.js","index.js"],"names":["Weathercard","tempinfo","useState","weatherState","setweatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timestr","getHours","getMinutes","className","class","App","searchValue","setsearchValue","settempinfo","getWeatherinfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee3c5c52.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nexport const Weathercard = ({tempinfo}) => {\r\nconst [weatherState,setweatherState]= useState(\"\");\r\n\r\n\r\n    const{\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n\r\n    }=tempinfo;\r\n\r\n\r\n    // showing weather icon live \r\n\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch(weathermood){\r\n                case \"Clouds\" :setweatherState(\"uil-clouds\");\r\n                    break;\r\n                case \"Rain\" :setweatherState(\"uil-cloud-drizzle\");\r\n                    break;\r\n                case \"Clear\" :setweatherState(\" uil-sun\");\r\n                    break;\r\n                case \"Sunny\" :setweatherState(\" uil-brightness\");\r\n                    break;\r\n                case \"Mostly Sunny\" :setweatherState(\"uil-cloud-sun-rain\");\r\n                    break;\r\n                case \"Tornado\" :setweatherState(\" uil-tornado\");\r\n                    break;\r\n                case \"Heavy Rain\" :setweatherState(\" uil-cloud-showers-heavy\");\r\n                    break;\r\n                case \"Cloud Winds\" :setweatherState(\" uil-cloud-wind\");\r\n                    break;\r\n                case \"Snow Flake\" :setweatherState(\"uil-snowflake\");\r\n                    break;\r\n                case \"Thunderstorm\" :setweatherState(\"uil-thunderstorm\");\r\n                    break;\r\n                case \"Haze\" :setweatherState(\"uil-wind\");\r\n                    break;\r\n                case \"Mist\" :setweatherState(\"uil-windy\");\r\n                    break;\r\n                    default:\r\n                        setweatherState(\" uil-sun\")\r\n                        break;\r\n            }\r\n            \r\n        }\r\n    }, [weathermood])\r\n\r\n\r\n    // converting sunset mini sec to hour or min \r\n    let sec = sunset;\r\n    let date = new Date (sec*1000);\r\n    let timestr =`${date.getHours()}:${date.getMinutes()}`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"weather-card\">\r\n                {/* left  */}\r\n                <div className=\"card-left\">\r\n                    <div className=\"live-temp-type\">{weathermood}</div>\r\n                    <div className=\"live-weather-icon\">\r\n                    <i class={`uil ${weatherState}`}></i>\r\n                    </div>\r\n                    \r\n                    <div className=\"live-temp-deg\">{temp}&deg;C</div>\r\n                </div>\r\n\r\n                {/* right */}\r\n                <div className=\"card-right\">\r\n                    {/* right top */}\r\n                    <div className=\"card-right-top\">\r\n                        <div className=\"weatherplace\"> {name},{country} </div>\r\n                    </div>\r\n\r\n                    {/* right mid */}\r\n                    <div className=\"card-mid-top\">\r\n                        <div className=\"sub-weather-info\">\r\n                            <i class=\"uil uil-sunset\"></i>\r\n                            <div className=\"sub-items-text\">\r\n                                <p>{timestr} PM</p>\r\n                                <p>Sunset</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sub-weather-info\">\r\n                            <i class=\"uil uil-cloud-rain\"></i>\r\n                            <div className=\"sub-items-text\">\r\n                                <p>{humidity}%</p>\r\n                                <p>Humidity</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sub-weather-info\">\r\n                        <i class=\"uil uil-wind-sun\"></i>\r\n                         <div className=\"sub-items-text\">\r\n                                <p>{pressure}</p>\r\n                                <p>Pressure</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sub-weather-info\">\r\n                            <i class=\"uil uil-wind\"></i>\r\n                            <div className=\"sub-items-text\">\r\n                                <p>{speed}Km/hr</p>\r\n                                <p>Speed</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// api.openweathermap.org/data/2.5/weather?q=Sirsa&appid=983980943e4afc86d97243b4f1873779\n\nimport React, { useState, useEffect } from \"react\";\nimport { Weathercard } from \"./weathercard\";\n\nconst App = () => {\n  const [searchValue, setsearchValue] = useState(\"Sirsa\");\n  const [tempinfo, settempinfo] = useState({});\n  const getWeatherinfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=983980943e4afc86d97243b4f1873779`;\n      const res = await fetch(url);\n      const data = await res.json();\n\n      // geting values --- from api to our project\n\n      const { temp, humidity, pressure } = data.main;\n      const { main: weathermood } = data.weather[0];\n      const { name } = data;\n      const { speed } = data.wind;\n      const { country, sunset } = data.sys;\n\n      // ----- creating my own object below for passing above values which i got from api----\n\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset,\n      };\n\n      // -------------------------------i have passed the object here\n      settempinfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherinfo();\n  }, []);\n\n  return (\n    <>\n      <div className=\"main-div\">\n        <div className=\"appname\"><h1><i class=\"uil uil-snowflake\"></i> Weather App <i class=\"uil uil-snowflake\"></i> </h1></div>\n        <br />\n        {/* search bar  */}\n        <div className=\"searchbar\">\n          <input\n            type=\"search\"\n            placeholder=\"search here\"\n            autoFocus\n            id=\"Searchbararea\"\n            value={searchValue}\n            onChange={(e) => setsearchValue(e.target.value)}\n          />\n          <button className=\"searchbtn\" onClick={getWeatherinfo}>\n            Search\n          </button>\n        </div>\n\n      {/* weather card  */}\n\n      <Weathercard tempinfo={tempinfo} />\n\n      {/* passing tempinfo as a props in above statement  */}\n\n      {/* ------  footer here  --------  */}\n      <footer>\n        <p>Designed & Developed by <a href=\"https://www.linkedin.com/in/gauravson97/\" target=\"_blank\">Gaurav Soni</a> </p>\n      </footer>\n      </div>\n      {/* ------  footer here  --------  */}\n\n\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}